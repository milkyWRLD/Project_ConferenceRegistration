@page "/participants"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using ConferenceFrontend.Models
@using System.Net.Http.Json

<h3>Список участников</h3>

@if (participants == null)
{
    <p>Загрузка...</p>
}
else if (!participants.Any())
{
    <p>Участники отсутствуют.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ФИО</th>
                <th>Место работы</th>
                <th>Ученая степень</th>
                <th>Контакты</th>
                <th>Роль</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var participant in participants)
            {
                <tr>
                    <td>@participant.FullName</td>
                    <td>@participant.Workplace</td>
                    <td>@participant.AcademicTitle</td>
                    <td>@participant.ContactInfo</td>
                    <td>@participant.Role</td>
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => EditParticipant(participant.Id)">Редактировать</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteParticipant(participant.Id)">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="AddParticipant">Добавить участника</button>

@code {
    private List<Participant>? participants;

    protected override async Task OnInitializedAsync()
    {
        participants = await Http.GetFromJsonAsync<List<Participant>>("http://localhost:5028/api/participants");
    }

    private void AddParticipant()
    {
        NavigationManager.NavigateTo("/register");
    }

    private void EditParticipant(int id)
    {
        NavigationManager.NavigateTo($"/participants/edit/{id}");
    }

    private async Task DeleteParticipant(int id)
    {
        await Http.DeleteAsync($"http://localhost:5028/api/participants/{id}");
        participants = participants?.Where(p => p.Id != id).ToList();
    }
}
